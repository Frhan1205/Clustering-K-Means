# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10m3lLnrWAA4UkO_3EqL-udo2cMS5M11h
"""

# streamlit_app.py
import streamlit as st
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.dates as mdates

# Konfigurasi tampilan awal
st.set_page_config(page_title="Analisis Klaster COVID-19", layout="wide")
st.title("📊 Analisis Klaster Harian COVID-19 di Indonesia")

# Upload file
uploaded_file = st.file_uploader("📎 Upload file CSV dengan data COVID-19", type="csv")

if uploaded_file:
    df = pd.read_csv(uploaded_file)

    st.subheader("🧾 Pratinjau Data")
    st.dataframe(df.head())

    # Pilih kolom numerik
    numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns.tolist()

    st.subheader("⚙️ Konfigurasi Klastering")
    selected_cols = st.multiselect("Pilih Kolom untuk Clustering (min 2 kolom):", numeric_cols,
                                   default=['jumlah_positif', 'jumlah_dirawat'] if 'jumlah_positif' in numeric_cols else numeric_cols[:2])

    n_clusters = st.slider("Jumlah Klaster (k)", min_value=2, max_value=10, value=3)

    if len(selected_cols) >= 2:
        # Standarisasi data
        data_scaled = StandardScaler().fit_transform(df[selected_cols].dropna())
        clustering_data = df[selected_cols].dropna().copy()

        # Jalankan KMeans
        kmeans = KMeans(n_clusters=n_clusters, random_state=42)
        labels = kmeans.fit_predict(data_scaled)

        # Gabungkan kembali ke df asli
        df.loc[clustering_data.index, 'Cluster'] = labels
        df['Cluster'] = df['Cluster'].astype(int)

        # Visualisasi scatter plot klaster
        st.subheader("📍 Visualisasi Klaster (2D Scatterplot)")
        fig1, ax1 = plt.subplots()
        sns.scatterplot(data=df, x=selected_cols[0], y=selected_cols[1], hue='Cluster', palette='Set1', ax=ax1)
        ax1.set_xlabel(selected_cols[0])
        ax1.set_ylabel(selected_cols[1])
        ax1.set_title("Visualisasi Klaster")
        st.pyplot(fig1)

        # Statistik ringkasan
        st.subheader("📊 Statistik Rata-rata per Klaster")
        st.dataframe(df.groupby('Cluster')[selecte]()

